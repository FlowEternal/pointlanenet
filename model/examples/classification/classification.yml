general:
    backend: tensorflow


pipeline: [fine_tune, nas, hpo, fully_train]


fine_tune:
    pipe_step:
        type: TrainPipeStep
    model:
        head: 'resnet_model/dense/'
        pretrained_model_file: /cache/models/resnet_imagenet_v1_fp32_20181001
        model_desc:
            type: ResNetTF
            resnet_size: 50
            num_classes: 10
    trainer:
        type: Trainer
        epochs: 40
        mixup: True
        optimizer:
            type: SGD
            params:
                lr: 0.003
                momentum: 0.9
                weight_decay: !!float 1e-4
        lr_scheduler:
            type: WarmupScheduler
            params:
                warmup_type: linear
                warmup_iters: 5
                warmup_ratio: 0.01
                after_scheduler_config:
                    type: MultiStepLR
                    params:
                        milestones: [30]
                        gamma: 0.1
        loss:
            type: CrossEntropyLoss

    dataset:
        type: Cifar10
        common:
            data_path: /cache/datasets/cifar10/
            batch_size: 128
        train:
            transforms:
                -   type: Resize
                    size: [256, 256]
                -   type: RandomCrop
                    size: [224, 224]
                -   type: RandomHorizontalFlip
                -   type: ToTensor
                -   type: Normalize
                    mean: [0.50, 0.5, 0.5]
                    std: [0.50, 0.5, 0.5]
        val:
            transforms:
                -   type: Resize
                    size: [224, 224]
                -   type: ToTensor
                -   type: Normalize
                    mean: [0.50, 0.5, 0.5]
                    std: [0.50, 0.5, 0.5]
        test:
            transforms:
                -   type: Resize
                    size: [224, 224]
                -   type: ToTensor
                -   type: Normalize
                    mean: [0.50, 0.5, 0.5]
                    std: [0.50, 0.5, 0.5]
    evaluator:
        type: Evaluator
        host_evaluator:
            type: HostEvaluator
            metric:
                type: accuracy

nas:
    pipe_step:
        type: SearchPipeStep
    search_algorithm:
        type: EvolutionAlgorithm
        objective_keys: ['accuracy', 'flops']
        policy:
            num_individual: 8
            num_generation: 4
            random_samples: 32
    search_space:
        type: BackboneNasSearchSpace
    model:
        model_desc_file: "{local_base_path}/output/fine_tune/desc_0.json"
        pretrained_model_file: "{local_base_path}/output/fine_tune/model_0/"
    trainer:
        ref: fine_tune.trainer
        max_train_steps: 1
        epochs: 1
    dataset:
        ref: fine_tune.dataset


hpo:
    pipe_step:
        type: SearchPipeStep
    search_algorithm:
        type: AshaHpo
        policy:
            total_epochs: 81
    search_space:
        type: SearchSpace
        hyperparameters:
            -   key: trainer.optimizer.params.lr
                type: FLOAT_EXP
                range: [0.001, 0.01]
            -   key: trainer.optimizer.type
                type: CATEGORY
                range: ['Adam', 'SGD']
            -   key: trainer.optimizer.params.momentum
                type: FLOAT
                range: [0.5, 0.99]
        condition:
            -   key: condition_for_sgd_momentum
                child: trainer.optimizer.params.momentum
                parent: trainer.optimizer.type
                type: EQUAL
                range: ["SGD"]
    trainer:
        ref: fine_tune.trainer
    model:
        model_desc_file:  "{local_base_path}/output/fine_tune/desc_0.json"
        pretrained_model_file: "{local_base_path}/output/fine_tune/model_0/"
    dataset:
        ref: fine_tune.dataset


fully_train:
    pipe_step:
        type: TrainPipeStep
        models_folder: "{local_base_path}/output/nas/"
    trainer:
        ref: fine_tune.trainer
        hps_folder: "{local_base_path}/output/hpo/"
    evaluator:
        ref: fine_tune.evaluator
    dataset:
        ref: fine_tune.dataset
